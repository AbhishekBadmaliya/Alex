import React, { useState } from "react";
import {
  Box,
  Button,
  FormControl,
  FormLabel,
  Input,
  VStack,
  useToast,
} from "@chakra-ui/react";

const DeploymentForm = () => {
  const [formData, setFormData] = useState({
    unitName: "",
    rigId: "",
    deploymentDate: "",
  });

  const toast = useToast();

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    try {
      const response = await fetch("http://localhost:8080/api/drill/save", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      });

      if (response.ok) {
        toast({
          title: "Success",
          description: "Deployment saved to database.",
          status: "success",
          duration: 3000,
          isClosable: true,
        });
        setFormData({ unitName: "", rigId: "", deploymentDate: "" });
      } else {
        throw new Error("Failed to save data");
      }
    } catch (error) {
      toast({
        title: "Error",
        description: "Something went wrong!",
        status: "error",
        duration: 3000,
        isClosable: true,
      });
    }
  };

  return (
    <Box maxW="400px" mx="auto" mt="50px">
      <form onSubmit={handleSubmit}>
        <VStack spacing={4}>
          <FormControl isRequired>
            <FormLabel>Unit Name</FormLabel>
            <Input
              type="text"
              name="unitName"
              value={formData.unitName}
              onChange={handleChange}
            />
          </FormControl>

          <FormControl isRequired>
            <FormLabel>Rig ID</FormLabel>
            <Input
              type="text"
              name="rigId"
              value={formData.rigId}
              onChange={handleChange}
            />
          </FormControl>

          <FormControl isRequired>
            <FormLabel>Deployment Date</FormLabel>
            <Input
              type="date"
              name="deploymentDate"
              value={formData.deploymentDate}
              onChange={handleChange}
            />
          </FormControl>

          <Button colorScheme="blue" type="submit">
            Submit
          </Button>
        </VStack>
      </form>
    </Box>
  );
};

export default DeploymentForm;
